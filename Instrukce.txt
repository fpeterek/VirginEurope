----------------------------------------------------------------
-                                                              -
-               Letecká společnost Virgin Europe               -
-                                                              - 
-                                     Filip Peterek, PET0342   -
----------------------------------------------------------------

Testy jsou dokončené, poznámky jsem vzal v potaz a vše jsem upravil

Changelog:
    - Místo SELECT * se nyní vyjmenují všechny atributy
    - Updatované DB schéma - passenger_on_flight přejmenováno na flight_ticket,
      v tabulce flight_ticket je nový primární klíč
    - Dotazům UPDATE/INSERT/DELETE jde nově předat místo výčtu atributů také
      nově přímo objekt
      Insert.into(VU.flight).row(new Flight(...));
    - Dokončené testy

Historie změn je dostupná na Githubu: https://github.com/fpeterek/VirginEurope


Program postupně projde všechny momentálně implementované testy. Občas se zastaví a čeká na stisk
klávesy <Enter> (aby bylo možné manuálně zkontrolovat DB). Na konci resetuje všechny změny
a zanechá DB ve stejném stavu, v jakém byla před spuštěním testu. Pokud program spadne
za běhu, případně je zabit, před resetováním DB (např. když dostane SIGKILL, SIGTERM, atd.,
normálně nepadá), nemusí v příštím běhu proběhnout znovu. Na stdin je ale možné přesměrovat
prázdný string, díky čemuž program nečeká na vstup od uživatele (pokud nechcete kontrolovat
DB manuálně).


-----------------------------------
-                                 -
-      Softwarové závislosti      -
-                                 -
-----------------------------------

JDK13 (Používám OpenJDK, ale s Oracle JDK by to mělo fungovat taky)

nebo

Docker (Pokud chcete buildit v Dockeru. Není to třeba, ale Docker si zajistí správné JDK.)

-------------------------------------
-                                   -
-       Build pomocí Gradle         -
-                                   -
-------------------------------------

Linux:

./gradlew build


Windows:

gradlew.bat build


Na Linuxu je třeba použít Shell skript, na Windowsu Batch skript


Spuštění:

java -jar ./build/libs/VirginEurope-1.0.jar

Případně pomocí Gradle:

./gradlew run


Pokud nechceme, aby program čekal na input, můžeme mu předat prázdný stdin

echo "" | java -jar ./build/libs/VirginEurope-1.0.jar

Program poté proletí všechny testy bez čekání.

--------------------------------
-                              -
-     Build pomocí Dockeru     -
-                              -
--------------------------------

Není třeba buildit v Dockeru, Docker si ale JDK zajistí sám. Počet příkazů je naprosto stejný (tedy 2).

Build:

docker build -t virgineurope .

Run:

docker run -ti virgineurope



